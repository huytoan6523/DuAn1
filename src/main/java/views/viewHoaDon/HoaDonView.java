/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views.viewHoaDon;

import domainModels.HoaDon;
import domainModels.HoaDonChiTiet;
import domainModels.KhachHang;
import domainModels.KhuyenMai;
import domainModels.NhanVien;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import service.HoaDonService;

/**
 *
 * @author PhiLT
 */
public class HoaDonView extends javax.swing.JPanel {
private HoaDonService hoaDonService = new HoaDonService();
private SimpleDateFormat dfm = new SimpleDateFormat("yy-MM-dd");
    /**
     * Creates new form HoaDonView
     */
    public HoaDonView() {
        initComponents();
        tbModelHD  =  (DefaultTableModel) tbHoaDon.getModel();
        tbModelHDCT = (DefaultTableModel) tbHDCT.getModel();
        cbbLocTrangThaiHD.setSelectedIndex(0);
        loadCbbKM();
        loadCbbKH();
        loadCbbNV();
    }
    
    private List<HoaDon> lstHoaDon ;
    private List<HoaDonChiTiet> lstHDCT;
    private List<KhuyenMai> lstKM;
    private List<KhachHang> lstKH;
    private List<NhanVien> lstNV;
    private DefaultTableModel tbModelHD;
    private DefaultTableModel tbModelHDCT;
    private DefaultComboBoxModel cbbKMModel;
    private DefaultComboBoxModel cbbKHModel;
    private DefaultComboBoxModel cbbNVModel;
    
    
    private void loadCbbKM(){
        cbbKMModel = (DefaultComboBoxModel) cbbKM.getModel();
        lstKM = hoaDonService.getAllKM();
        for (KhuyenMai km : lstKM) {
            cbbKMModel.addElement(km.getTenKhuyenMai());
        }
    }
    
    private void loadCbbKH(){
        cbbKHModel = (DefaultComboBoxModel) cbbKhachHang.getModel();
        lstKH = hoaDonService.getAllKhachHang();
        for (KhachHang kh : lstKH) {
            cbbKHModel.addElement(kh.getTen());
        }
    }
    
    private void loadCbbNV(){
        cbbNVModel = (DefaultComboBoxModel) cbbNhanVien.getModel();
        lstNV = hoaDonService.getAllNhanVien();
        for (NhanVien nv : lstNV) {
            cbbNVModel.addElement(nv.getHoTen());
        }
    }
    
private void loadTableHoaDon(){
    lstHoaDon = new ArrayList<>();
    lstHoaDon = hoaDonService.getALHoaDon();
    tbModelHD.setRowCount(0);
    for (HoaDon hoaDon : lstHoaDon) {
        tbModelHD.addRow(new Object[]{
        hoaDon.getMa(),
            hoaDon.getNgayTao(),
            hoaDon.getNgayThanhToan(),
            hoaDon.getKhuyenMai()==null? "":hoaDon.getKhuyenMai().getTenKhuyenMai(),
            hoaDon.getKhachHang()==null? "":hoaDon.getKhachHang().getTen(),
            hoaDon.getNhanVien()==null? "":hoaDon.getNhanVien().getHoTen(),
            hoaDon.getNgayNhan(),
            hoaDon.getThanhTien()
        });
    }
    
}

private void loadTableHDCT(String idHD){
    lstHDCT = new ArrayList<>();
    lstHDCT = hoaDonService.getALLHDCT(idHD);
    if(lstHDCT.isEmpty()) return;
    tbModelHDCT.setRowCount(0);
    for (HoaDonChiTiet hdct : lstHDCT) {
        tbModelHDCT.addRow(new Object[]{
            hdct.getHoaDon()==null? "": hdct.getHoaDon().getMa(),
            hdct.getChiTietDoGo()==null? "":hdct.getChiTietDoGo().getTenSP(),
            hdct.getSoLuong(),
            hdct.getDonGia()
        });
    }
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtThanhTien = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHDCT = new javax.swing.JTable();
        txtTimKiemHDCT = new javax.swing.JTextField();
        cbbLocTrangThaiHD = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbHoaDon = new javax.swing.JTable();
        txtTimKiemHD = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        cbbKhachHang = new javax.swing.JComboBox<>();
        cbbTrangThai = new javax.swing.JComboBox<>();
        cbbNhanVien = new javax.swing.JComboBox<>();
        cbbKM = new javax.swing.JComboBox<>();
        dcNgayTT = new com.toedter.calendar.JDateChooser();
        dcNgayNhan = new com.toedter.calendar.JDateChooser();
        dcNgayTao = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(204, 255, 255));
        setMaximumSize(new java.awt.Dimension(1199, 853));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Quản lý hóa đơn");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 18, -1, -1));

        txtId.setEditable(false);
        txtId.setBackground(new java.awt.Color(255, 255, 255));
        txtId.setActionCommand("<Not Set>");
        txtId.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 0)));
        add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 86, 140, 29));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("ID");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 56, 70, 23));

        txtMa.setActionCommand("<Not Set>");
        txtMa.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 0)));
        add(txtMa, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 86, 140, 29));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Mã");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 56, 70, 23));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Ngày tạo");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 143, 70, 23));

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Ngày thanh toán");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 143, -1, 23));

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Khuyến mại");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 229, 70, 23));

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Khách hàng");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 229, 70, 23));

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Nhân viên");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 315, 70, 23));

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("Ngày nhận");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 315, 70, 23));

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Trạng thái");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 402, 70, 23));

        txtThanhTien.setEditable(false);
        txtThanhTien.setBackground(new java.awt.Color(255, 255, 255));
        txtThanhTien.setActionCommand("<Not Set>");
        txtThanhTien.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 0)));
        add(txtThanhTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 432, 140, 29));

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("Thành tiền");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 402, 70, 23));

        tbHDCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Tên sản phẩm", "Số lượng", "Đơn giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbHDCT);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 520, 710, 310));

        txtTimKiemHDCT.setText("Nhập tên sản phẩm cần tìm");
        txtTimKiemHDCT.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add(txtTimKiemHDCT, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 480, 300, 30));

        cbbLocTrangThaiHD.setBackground(new java.awt.Color(255, 255, 153));
        cbbLocTrangThaiHD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Chờ thanh toán", "Đã thanh toán" }));
        cbbLocTrangThaiHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLocTrangThaiHDActionPerformed(evt);
            }
        });
        add(cbbLocTrangThaiHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1029, 90, 130, 30));

        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã", "Ngày tạo", "Ngày thanh toán", "Khuyến mại", "Khách hàng", "Nhân viên", "Ngày nhận", "Tổng tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbHoaDon.setMaximumSize(new java.awt.Dimension(1199, 850));
        tbHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbHoaDon);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, 710, 330));

        txtTimKiemHD.setText("Nhập mã hóa đơn cần tìm");
        txtTimKiemHD.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtTimKiemHD.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTimKiemHDCaretUpdate(evt);
            }
        });
        txtTimKiemHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimKiemHDMouseClicked(evt);
            }
        });
        add(txtTimKiemHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 300, 30));

        btnDelete.setBackground(new java.awt.Color(255, 255, 153));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 493, 140, 41));

        btnUpdate.setBackground(new java.awt.Color(255, 255, 153));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 493, 140, 41));

        cbbKhachHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn khách hàng" }));
        add(cbbKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 140, 30));

        cbbTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chờ thanh toán", "Đã thanh toán" }));
        add(cbbTrangThai, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 140, 30));

        cbbNhanVien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn nhân viên" }));
        add(cbbNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 140, 30));

        cbbKM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn khuyến mại" }));
        add(cbbKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 140, 30));

        dcNgayTT.setBackground(new java.awt.Color(255, 255, 255));
        dcNgayTT.setDateFormatString("yyyy-MM-dd");
        add(dcNgayTT, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 140, 30));

        dcNgayNhan.setBackground(new java.awt.Color(255, 255, 255));
        dcNgayNhan.setDateFormatString("yyyy-MM-dd");
        add(dcNgayNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 140, 30));

        dcNgayTao.setBackground(new java.awt.Color(255, 255, 255));
        dcNgayTao.setDateFormatString("yyyy-MM-dd");
        add(dcNgayTao, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    
    private void tbHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseClicked
        // TODO add your handling code here:
        int row = tbHoaDon.getSelectedRow();
        String ma = tbHoaDon.getValueAt(row, 0)+"";
        HoaDon hd = hoaDonService.getOneHDByMa(ma);
        txtId.setText(hd.getId());
        txtMa.setText(hd.getMa());
        dcNgayTao.setDate(hd.getNgayTao());
        dcNgayTT.setDate(hd.getNgayThanhToan());
        if(hd.getKhuyenMai()==null){
            cbbKM.setSelectedIndex(0);
        }else{
        cbbKM.setSelectedItem(hd.getKhuyenMai().getTenKhuyenMai());
        }
        if(hd.getKhachHang()==null){
            cbbKhachHang.setSelectedIndex(0);
        }else{
        cbbKhachHang.setSelectedItem(hd.getKhachHang().getTen());
        }
        if(hd.getNhanVien()==null){
            cbbNhanVien.setSelectedIndex(0);
        }else{
        cbbNhanVien.setSelectedItem(hd.getNhanVien().getHoTen());
        }
        dcNgayNhan.setDate(hd.getNgayNhan());
        cbbTrangThai.setSelectedIndex(hd.getTrangThaiHoaDon());
        txtThanhTien.setText(hd.getThanhTien()+"");
        loadTableHDCT(hd.getId());
    }//GEN-LAST:event_tbHoaDonMouseClicked

    private void cbbLocTrangThaiHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLocTrangThaiHDActionPerformed
        // TODO add your handling code here:
        String check = (String) cbbLocTrangThaiHD.getSelectedItem();
        tbModelHD.setRowCount(0);
        if(check.equalsIgnoreCase("Chờ thanh toán")){
                for (HoaDon hd : lstHoaDon) {
                if(hd.getTrangThaiHoaDon()==0){
                    tbModelHD.addRow(new Object[]{
        hd.getMa(),
            hd.getNgayTao(),
            hd.getNgayThanhToan(),
            hd.getKhuyenMai()==null? "":hd.getKhuyenMai().getTenKhuyenMai(),
            hd.getKhachHang()==null? "":hd.getKhachHang().getTen(),
            hd.getNhanVien()==null? "":hd.getNhanVien().getHoTen(),
            hd.getNgayNhan(),
            hd.getThanhTien()
        });
                }
            }
    }else if(check.equalsIgnoreCase("Đã thanh toán")){
            for (HoaDon hd : lstHoaDon) {
                if(hd.getTrangThaiHoaDon()==1){
                    tbModelHD.addRow(new Object[]{
        hd.getMa(),
            hd.getNgayTao(),
            hd.getNgayThanhToan(),
            hd.getKhuyenMai()==null? "":hd.getKhuyenMai().getTenKhuyenMai(),
            hd.getKhachHang()==null? "":hd.getKhachHang().getTen(),
            hd.getNhanVien()==null? "":hd.getNhanVien().getHoTen(),
            hd.getNgayNhan(),
            hd.getThanhTien()
        });
                }
            }
        }else{
        loadTableHoaDon();
    }
    }//GEN-LAST:event_cbbLocTrangThaiHDActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        Integer trangThai = cbbTrangThai.getSelectedIndex();
        if(trangThai==0){
            
        HoaDon hoaDon = new HoaDon();
        String id = txtId.getText();
        String ma = txtMa.getText();
        
        Date ngayTao = dcNgayTao.getDate();
            
        if(ngayTao==null){
            System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>Check ngay tao"+ ngayTao);
            hoaDon.setNgayTao(null);
        }else{
          
                System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>Check ngay tao: "+ ngayTao);
            try {
                hoaDon.setNgayTao(dfm.parse(dfm.format(ngayTao)));
            } catch (ParseException ex) {
                Logger.getLogger(HoaDonView.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        }
        Date ngayTT = dcNgayTT.getDate();
        
        if(ngayTT==null){
            System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>Check ngayTT"+ ngayTT);
            hoaDon.setNgayThanhToan(null);
        }else{
           
                System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>Check ngayTT"+ ngayTT);
            try {
                hoaDon.setNgayThanhToan(dfm.parse(dfm.format(ngayTT)));
            } catch (ParseException ex) {
                Logger.getLogger(HoaDonView.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        int viTriKM = cbbKM.getSelectedIndex();
        int viTriKH = cbbKhachHang.getSelectedIndex();
        int viTriNV = cbbNhanVien.getSelectedIndex();
        if(viTriKM==0){
            hoaDon.setKhuyenMai(null);
        }else{
        KhuyenMai km = lstKM.get(viTriKM-1);
        hoaDon.setKhuyenMai(km);
        }
        if(viTriKH==0){
            hoaDon.setKhachHang(null);
        }else{
            KhachHang kh = lstKH.get(viTriKH-1);
        hoaDon.setKhachHang(kh);
        }
        if(viTriNV==0){
            hoaDon.setNhanVien(null);
        }else{
            NhanVien nv = lstNV.get(viTriNV-1);
        hoaDon.setNhanVien(nv);
        }
        
        
        Date ngayNhan = dcNgayNhan.getDate();
        System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>"+ ngayNhan);
        if(ngayNhan==null){
            hoaDon.setNgayNhan(null);
        }else{
            
            
            try {
                hoaDon.setNgayNhan(dfm.parse(dfm.format(ngayNhan)));
            } catch (ParseException ex) {
                Logger.getLogger(HoaDonView.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        BigDecimal thanhTien = new BigDecimal(txtThanhTien.getText()==null? "0":txtThanhTien.getText());
        
        hoaDon.setId(id);
        hoaDon.setMa(ma);
        
        
        
        
        
        hoaDon.setTrangThaiHoaDon(trangThai);
        hoaDon.setThanhTien(thanhTien);
        if(hoaDonService.addOrUpdateHoaDon(hoaDon)==false){
            JOptionPane.showMessageDialog(this, "Sửa hóa đơn không thành công");
        }else{
           int check = cbbLocTrangThaiHD.getSelectedIndex();
           cbbLocTrangThaiHD.setSelectedIndex(check);
            JOptionPane.showMessageDialog(this, "Sửa hóa đơn thành công");
        }
        }else{
            JOptionPane.showMessageDialog(this, "Hóa đơn đã được thanh toán, không thể sửa");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int checkTT = cbbTrangThai.getSelectedIndex();
        if(checkTT==0){
        String id = txtId.getText();
        if(id.trim().length()==0){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn");
        }else{
            if(hoaDonService.deleteHoaDon(id)){
               int check = cbbLocTrangThaiHD.getSelectedIndex();
               cbbLocTrangThaiHD.setSelectedIndex(check);
                JOptionPane.showMessageDialog(this, "Xóa hóa đơn thành công");
            }else{
                JOptionPane.showMessageDialog(this, "Không thể xóa hóa đơn");
            }
        }
        }else{
            JOptionPane.showMessageDialog(this, "Hóa đơn đã thanh toán không thể xóa");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtTimKiemHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimKiemHDMouseClicked
        // TODO add your handling code here:
        txtTimKiemHD.setText("");
    }//GEN-LAST:event_txtTimKiemHDMouseClicked

    private void txtTimKiemHDCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTimKiemHDCaretUpdate
        // TODO add your handling code here:
        String ma = txtTimKiemHD.getText();
        
    }//GEN-LAST:event_txtTimKiemHDCaretUpdate
private List<HoaDon> lstHDTimKiem = new ArrayList<>();
    private void loadTBHDTimKiem(String ma){
    lstHDTimKiem = hoaDonService.getHoaDonByMa(ma);
    for (HoaDon hd : lstHDTimKiem) {
                
                    tbModelHD.addRow(new Object[]{
        hd.getMa(),
            hd.getNgayTao(),
            hd.getNgayThanhToan(),
            hd.getKhuyenMai()==null? "":hd.getKhuyenMai().getTenKhuyenMai(),
            hd.getKhachHang()==null? "":hd.getKhachHang().getTen(),
            hd.getNhanVien()==null? "":hd.getNhanVien().getHoTen(),
            hd.getNgayNhan(),
            hd.getThanhTien()
        });
                }
            
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbbKM;
    private javax.swing.JComboBox<String> cbbKhachHang;
    private javax.swing.JComboBox<String> cbbLocTrangThaiHD;
    private javax.swing.JComboBox<String> cbbNhanVien;
    private javax.swing.JComboBox<String> cbbTrangThai;
    private com.toedter.calendar.JDateChooser dcNgayNhan;
    private com.toedter.calendar.JDateChooser dcNgayTT;
    private com.toedter.calendar.JDateChooser dcNgayTao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbHDCT;
    private javax.swing.JTable tbHoaDon;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtThanhTien;
    private javax.swing.JTextField txtTimKiemHD;
    private javax.swing.JTextField txtTimKiemHDCT;
    // End of variables declaration//GEN-END:variables
}
